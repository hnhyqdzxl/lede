# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v3

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
      - name: Generate configuration file
          rm -f ./.config*
          touch ./.config

          # 编译x64固件:
          cat >> .config <<EOF

          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_BATMAN_ADV_BATMAN_V=y
          CONFIG_BATMAN_ADV_BLA=y
          CONFIG_BATMAN_ADV_DAT=y
          CONFIG_BATMAN_ADV_MCAST=y
          CONFIG_CGROUPFS_MOUNT_KERNEL_CGROUPS=y
          CONFIG_DOCKER_CGROUP_OPTIONS=y
          CONFIG_DOCKER_NET_MACVLAN=y
          CONFIG_DOCKER_STO_EXT4=y
          CONFIG_DRIVER_11AC_SUPPORT=y
          CONFIG_DRIVER_11AX_SUPPORT=y
          CONFIG_KERNEL_CGROUP_DEVICE=y
          CONFIG_KERNEL_CGROUP_FREEZER=y
          CONFIG_KERNEL_CGROUP_NET_PRIO=y
          CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
          CONFIG_KERNEL_EXT4_FS_SECURITY=y
          CONFIG_KERNEL_FS_POSIX_ACL=y
          CONFIG_KERNEL_NET_CLS_CGROUP=y
          CONFIG_LXC_SECCOMP=y
          CONFIG_OPENVPN_openssl_ENABLE_DEF_AUTH=y
          CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
          CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
          CONFIG_OPENVPN_openssl_ENABLE_LZO=y
          CONFIG_OPENVPN_openssl_ENABLE_MULTIHOME=y
          CONFIG_OPENVPN_openssl_ENABLE_PF=y
          CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
          CONFIG_OPENVPN_openssl_ENABLE_SMALL=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_MAC80211_DEBUGFS=y
          CONFIG_PACKAGE_MAC80211_MESH=y
          CONFIG_PACKAGE_TAR_BZIP2=y
          CONFIG_PACKAGE_TAR_GZIP=y
          CONFIG_PACKAGE_TAR_XZ=y
          CONFIG_PACKAGE_TAR_ZSTD=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_batctl-default=y
          CONFIG_PACKAGE_btrfs-progs=y
          CONFIG_PACKAGE_bzip2=y
          CONFIG_PACKAGE_cgroupfs-mount=y
          CONFIG_PACKAGE_containerd=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_coreutils-stat=y
          CONFIG_PACKAGE_coreutils-stty=y
          CONFIG_PACKAGE_dawn=y
          CONFIG_PACKAGE_docker=y
          CONFIG_PACKAGE_docker-compose=y
          CONFIG_PACKAGE_dockerd=y
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_filebrowser=y
          CONFIG_PACKAGE_flock=y
          CONFIG_PACKAGE_getopt=y
          CONFIG_PACKAGE_hostapd-common=y
          CONFIG_PACKAGE_hwinfo=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_iptvhelper=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_iw=y
          CONFIG_PACKAGE_iwinfo=y
          CONFIG_PACKAGE_iwlwifi-firmware-ax201=y
          CONFIG_PACKAGE_kmod-asn1-encoder=y
          CONFIG_PACKAGE_kmod-batman-adv=y
          CONFIG_PACKAGE_kmod-br-netfilter=y
          CONFIG_PACKAGE_kmod-cfg80211=y
          CONFIG_PACKAGE_kmod-crypto-ccm=y
          CONFIG_PACKAGE_kmod-crypto-cmac=y
          CONFIG_PACKAGE_kmod-crypto-ctr=y
          CONFIG_PACKAGE_kmod-crypto-gcm=y
          CONFIG_PACKAGE_kmod-crypto-gf128=y
          CONFIG_PACKAGE_kmod-crypto-ghash=y
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-seqiv=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-crypto-sha512=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dummy=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_kmod-ikconfig=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-ipt-physdev=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-iwlwifi=y
          CONFIG_PACKAGE_kmod-ixgbevf=y
          CONFIG_PACKAGE_kmod-keys-encrypted=y
          CONFIG_PACKAGE_kmod-keys-trusted=y
          CONFIG_PACKAGE_kmod-lib-raid6=y
          CONFIG_PACKAGE_kmod-lib-xor=y
          CONFIG_PACKAGE_kmod-lib-zstd=y
          CONFIG_PACKAGE_kmod-mac80211=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-ipvs=y
          CONFIG_PACKAGE_kmod-nf-log6=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-random-core=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_kmod-tpm=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-ncm=y
          CONFIG_PACKAGE_kmod-usb-net-rtl8152=y
          # CONFIG_PACKAGE_kmod-usb-net-rtl8152-vendor is not set
          CONFIG_PACKAGE_kmod-usb-printer=y
          CONFIG_PACKAGE_kmod-veth=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libdevmapper=y
          CONFIG_PACKAGE_libgcrypt=y
          CONFIG_PACKAGE_libgpg-error=y
          CONFIG_PACKAGE_liblxc=y
          CONFIG_PACKAGE_liblzma=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libnetwork=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libseccomp=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_libzstd=y
          CONFIG_PACKAGE_luci-app-advanced=y
          CONFIG_PACKAGE_luci-app-alist=y
          CONFIG_PACKAGE_luci-app-control-timewol=y
          CONFIG_PACKAGE_luci-app-dnsfilter=y
          CONFIG_PACKAGE_luci-app-docker=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-easymesh=y
          CONFIG_PACKAGE_luci-app-filebrowser=y
          CONFIG_PACKAGE_luci-app-iptvhelper=y
          CONFIG_PACKAGE_luci-app-lucky=y
          CONFIG_PACKAGE_luci-app-lxc=y
          CONFIG_PACKAGE_luci-app-nps=y
          CONFIG_PACKAGE_luci-app-ntpc=y
          CONFIG_PACKAGE_luci-app-omcproxy=y
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-openvpn=y
          CONFIG_PACKAGE_luci-app-p910nd=y
          CONFIG_PACKAGE_luci-app-store=y
          CONFIG_PACKAGE_luci-app-udpxy=y
          CONFIG_PACKAGE_luci-app-usb-printer=y
          CONFIG_PACKAGE_luci-app-verysync=y
          CONFIG_PACKAGE_luci-app-wifischedule=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-alist-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-control-timewol-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-dnsfilter-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-docker-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-easymesh-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-lucky-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-nps-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-ntpc-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-omcproxy-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-openvpn-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-p910nd-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-udpxy-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-usb-printer-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-verysync-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-wifischedule-zh-cn=y
          CONFIG_PACKAGE_luci-lib-docker=y
          CONFIG_PACKAGE_luci-lib-taskd=y
          CONFIG_PACKAGE_luci-lib-xterm=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_lucky=y
          CONFIG_PACKAGE_lxc=y
          CONFIG_PACKAGE_lxc-attach=y
          CONFIG_PACKAGE_lxc-common=y
          CONFIG_PACKAGE_lxc-configs=y
          CONFIG_PACKAGE_lxc-console=y
          CONFIG_PACKAGE_lxc-create=y
          CONFIG_PACKAGE_lxc-hooks=y
          CONFIG_PACKAGE_lxc-templates=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_npc=y
          CONFIG_PACKAGE_ntpclient=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_omcproxy=y
          CONFIG_PACKAGE_openvpn-easy-rsa=y
          CONFIG_PACKAGE_openvpn-openssl=y
          CONFIG_PACKAGE_p910nd=y
          CONFIG_PACKAGE_r8152-firmware=y
          CONFIG_PACKAGE_rpcd-mod-lxc=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_runc=y
          CONFIG_PACKAGE_script-utils=y
          CONFIG_PACKAGE_tar=y
          CONFIG_PACKAGE_taskd=y
          CONFIG_PACKAGE_tini=y
          CONFIG_PACKAGE_udpxy=y
          CONFIG_PACKAGE_umdns=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_verysync=y
          CONFIG_PACKAGE_wifischedule=y
          CONFIG_PACKAGE_wireless-regdb=y
          CONFIG_PACKAGE_wireless-tools=y
          CONFIG_PACKAGE_wpad-openssl=y
          CONFIG_PACKAGE_xz=y
          CONFIG_PACKAGE_xz-utils=y
          CONFIG_TARGET_KERNEL_PARTSIZE=512
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024
          CONFIG_WPA_MBO_SUPPORT=y
          CONFIG_WPA_MSG_MIN_PRIORITY=3
          CONFIG_ZSTD_OPTIMIZE_O3=y
          # CONFIG_DOCKER_OPTIONAL_FEATURES is not set
          # CONFIG_KERNEL_CFQ_GROUP_IOSCHED is not set
          # CONFIG_KERNEL_CGROUP_HUGETLB is not set
          # CONFIG_KERNEL_CGROUP_PERF is not set
          # CONFIG_KERNEL_HUGETLBFS is not set
          # CONFIG_KERNEL_HUGETLB_PAGE is not set
          # CONFIG_KERNEL_MEMCG_SWAP_ENABLED is not set
          # CONFIG_KERNEL_PERF_EVENTS is not set
          # CONFIG_PACKAGE_kmod-inet-diag is not set
          
          EOF
   
      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
